# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-18.04
    services:
      shcn:
        image: shubhindia/shcn
        credentials:
          username: shubhindia
          password: ${{ secrets.DOCKER_PASSWORD}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.6.9'

      - name: Install virtualenv
        run: |
          pip install virtualenv
          virtualenv venv
          . venv/bin/activate
          pip install -r requirements.txt
          echo "DOCKER_TAG=shubhindia-gh-test" >> $GITHUB_ENV
          
      - name: Check the packages
        run: |
          pip freeze
      - name: caching
        uses: actions/cache@v2
        with:
          path: venv
          key: ${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}
          
      - name: Build and push Docker images 
        run: |
          #docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          #docker build -t shubhindia/gh-actions-test .
          #docker push shubhindia/gh-actions-test
          TAG=$DOCKER_TAG
          echo $TAG

  deploy:
    needs: build
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.6.9'
          
      - name: caching
        uses: actions/cache@v2
        with:
          path: venv
          key: ${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}
          
      - name: Activate virtual env and check the packages
        run: |
          . venv/bin/activate
          pip freeze
        
      - name: Set kubernetes context
        uses: Azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}

      - name: Deploy the image in kubernetes
        run: |
          kubectl apply -f ntsuserservice-deployment.yaml
